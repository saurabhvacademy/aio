===========================
 AIO Deployment Guide
===========================

Project Components:
-------------------
1. Frontend: Angular (aio-web) - Hosted on GitHub Pages
2. Backend: Node.js + Express (aio-be) - Hosted on Render.com
3. Database: MongoDB Atlas - Free Tier (aioCluster)

===========================================================
üõ†Ô∏è  Initial One-Time Setup Summary
===========================================================

‚úÖ FRONTEND SETUP (Angular)
---------------------------
- Built Angular with: ng build --base-href=/aio/
- Pushed to GitHub
- Deployed using: npx angular-cli-ghpages --dir=dist/aio-web
- Live at: https://saurabhvacademy.github.io/aio/

‚úÖ BACKEND SETUP (Node + Express)
---------------------------------
- Created server.js with Express and Mongoose
- Connected to MongoDB using environment variable MONGODB_URI
- Deployed on Render.com from GitHub repo
- Render Build Command: npm install
- Render Start Command: npm start
- Live at: https://aio-be.onrender.com/

‚úÖ MONGODB ATLAS SETUP
----------------------
- Created cluster: aioCluster
- Created DB user with password
- Enabled network access for: 0.0.0.0/0 (allow all IPs)
- Connection URI example:
  mongodb+srv://<user>:<password>@aioCluster.mongodb.net/aio-db?retryWrites=true&w=majority

===========================================================
üîÅ Daily / Routine Deployment Process
===========================================================

‚úÖ FRONTEND: GitHub Pages
-------------------------
1. Make code changes in Angular
2. Run build:
   ng build --base-href=/aio/
3. Deploy:
   npx angular-cli-ghpages --dir=dist/aio-web

‚úÖ BACKEND: Render.com
----------------------
1. Make code changes in Express app
2. Commit and push to GitHub:
   git add .
   git commit -m "update backend"
   git push
3. Render auto-deploys OR go to dashboard ‚Üí Manual Deploy

‚úÖ DATABASE: MongoDB Atlas
--------------------------
- No manual deployment needed
- Data is persisted automatically
- Check Atlas UI to monitor collections, performance, etc.

===========================================================
üß™ Testing & Verification
===========================================================

- Test backend:
  https://aio-be.onrender.com/api/hello

- Test frontend consuming backend:
  Angular service hitting aio-be.onrender.com

- Test DB connectivity from backend:
  https://aio-be.onrender.com/api/db-status

===========================================================
üìå Notes & Best Practices
===========================================================

- Never expose MongoDB URI or secrets in frontend
- Use environment variables in Render for sensitive data
- Consider enabling GitHub Pages branch protection
- For production: restrict MongoDB IP access

===========================================================

Author: Saurabh Sharma
Project: AIO (Angular + Express + MongoDB)
Date: [Insert Today‚Äôs Date]

